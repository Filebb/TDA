# What is Tidyverse?

```{r}
#| results: "asis"
#| echo: false
source("_common.R")
```

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/tidyverse.png")
```

**Tidyverse** is a collection of R packages designed to manipulate and visualise
a variety of different data formats. Tidiverse packages work well together by
adopting a consistent approach from both a syntactical and an operational point
of view.

Quoting the official [website](https://www.tidyverse.org/)

> The tidyverse is an opinionated collection of R packages designed for data
> science. All packages share an underlying design philosophy, grammar, and data
> structures.

In other words, the mission of Tidyverse is to provide a toolbox of functions,
grouped by theme in different packages, that are intuitive to use and easy to
remember.

## Tidy Data

Tidyverse's packages contains function that are designed to work with
**tidy data**. This means that: 

1. Each variable forms a column.

2. Each observation forms a row.

3. Each type of observational unit forms a table.

A dataset that is not tidy is said to be **messy**.

```{r}
#| echo: false
#| fig-cap: "[Image Credit](https://r4ds.hadley.nz/data-tidy.html#sec-tidy-data)"
#| cap-location: margin
knitr::include_graphics(path = "img/tidy_data.png")
```

Data is often messy (in a broad sense) because of many reasons: there can be
missing values, variables are wrongly encoded, and more. But even if we focus
on the above definition of tidy data, it is unrealistic to assume that it holds
for every data source we will consider, not even the majority. However,
Tidyverse includes functions that will help to transform a messy dataset into
a tidy one.

Why bother? Because Tidyverse functions simply won't work properly or won't work
at all with messy data. So, why should we use Tidyverse, since it forces us to
transform every data source into a tidy dataset, before we can evaluate
numerical summaries, plot graphs, built models? Because this consistent approach
will make our life easier on the long run. There is of course a learning curve,
but after we understand the philosophy behind Tidyverse, and we practice a bit,
then learning a new function or a new technique will be very easy. And the code
we will write to operate on the data will speak for itself.

## Installing and Loading Tidyverse

Installing `tidyverse` follows the usual procedure for installing a R package.

```{r}
#| eval: false
install.packages("tidyverse")
```

Loading `tidyverse` in the current session produces the following message.

```{r}
library(tidyverse)
```

## Core Packages

### readr {.unnumbered}

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/readr.png")
```

[Reference](https://readr.tidyverse.org)

[Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-import.pdf)

### tibble {.unnumbered}

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/tibble.png")
```

[Reference](https://tibble.tidyverse.org)

### dplyr {.unnumbered}

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/dplyr.png")
```

[Reference](https://dplyr.tidyverse.org)

[Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-transformation.pdf)

### ggplot2 {.unnumbered}

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/ggplot2.png")
```

[Reference](https://ggplot2.tidyverse.org)

[Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf)

### tidyr {.unnumbered}

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/tidyr.png")
```

[Reference](https://tidyr.tidyverse.org)

[Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/tidyr.pdf)

### forecats {.unnumbered}

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/forcats.png")
```

[Reference](https://forcats.tidyverse.org/)

[Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/factors.pdf)

### stringr {.unnumbered}

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/stringr.png")
```

[Reference](https://stringr.tidyverse.org/)

[Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/strings.pdf)

### purrr {.unnumbered}

```{r}
#| echo: false
#| column: margin
#| out-height: 115px
#| out-width: 100px
knitr::include_graphics(path = "img/hex_stickers/purrr.png")
```

[Reference](https://purrr.tidyverse.org/)

[Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/purrr.pdf)

## Other Packages

## References {.unnumbered}

+ Canelón, Silvia (2022). [An Antarctic Tour of the Tidyverse](https://slides.silviacanelon.com/tour-of-the-tidyverse-v2/)

+ Wickham, Hadley (2013). [Tidy Data](https://www.jstatsoft.org/index.php/jss/article/view/v059i10/v59i10.pdf). _Journal of Statistical Software_

+ Wickham, Hadley & Çetinkaya-Rundel, Mine & Grolemund, Garrett (2023). [R for Data Science (2e)](https://r4ds.hadley.nz/)